// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/glorpus-work/gotya/pkg/artifact (interfaces: ArchiveExtractor)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/interfaces.go . ArchiveExtractor
//

// Package mock_artifact is a generated GoMock package.
package mock_artifact

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockArchiveExtractor is a mock of ArchiveExtractor interface.
type MockArchiveExtractor struct {
	ctrl     *gomock.Controller
	recorder *MockArchiveExtractorMockRecorder
	isgomock struct{}
}

// MockArchiveExtractorMockRecorder is the mock recorder for MockArchiveExtractor.
type MockArchiveExtractorMockRecorder struct {
	mock *MockArchiveExtractor
}

// NewMockArchiveExtractor creates a new mock instance.
func NewMockArchiveExtractor(ctrl *gomock.Controller) *MockArchiveExtractor {
	mock := &MockArchiveExtractor{ctrl: ctrl}
	mock.recorder = &MockArchiveExtractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArchiveExtractor) EXPECT() *MockArchiveExtractorMockRecorder {
	return m.recorder
}

// ExtractAll mocks base method.
func (m *MockArchiveExtractor) ExtractAll(ctx context.Context, archivePath, destDir string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractAll", ctx, archivePath, destDir)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExtractAll indicates an expected call of ExtractAll.
func (mr *MockArchiveExtractorMockRecorder) ExtractAll(ctx, archivePath, destDir any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractAll", reflect.TypeOf((*MockArchiveExtractor)(nil).ExtractAll), ctx, archivePath, destDir)
}

// ExtractFile mocks base method.
func (m *MockArchiveExtractor) ExtractFile(ctx context.Context, archivePath, filePath, destPath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractFile", ctx, archivePath, filePath, destPath)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExtractFile indicates an expected call of ExtractFile.
func (mr *MockArchiveExtractorMockRecorder) ExtractFile(ctx, archivePath, filePath, destPath any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractFile", reflect.TypeOf((*MockArchiveExtractor)(nil).ExtractFile), ctx, archivePath, filePath, destPath)
}
